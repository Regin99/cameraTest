{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","src","setSrc","prekol","setPrekol","useEffect","navigator","mediaDevices","getUserMedia","video","facingMode","then","stream","className","width","height","autoPlay","muted","playsInline","ref","srcObject","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4LA2CeA,MAvCf,WACE,MAAsBC,mBAAS,MAA/B,mBAAOC,EAAP,KAAYC,EAAZ,KACA,EAA4BF,mBAAS,QAArC,mBAAOG,EAAP,KAAeC,EAAf,KAaA,OAXAC,qBAAU,WACRC,UAAUC,aACPC,aAAa,CACZC,MAAO,CACLC,WAAYP,KAGfQ,MAAK,SAACC,GACLV,EAAOU,QAEV,CAACT,IAEF,sBAAKU,UAAU,MAAf,UACE,uBACEC,MAAM,QACNC,OAAO,QACPC,UAAQ,EACRC,OAAK,EACLC,aAAW,EACXC,IAAK,SAACV,GACER,IACJQ,EAAMW,UAAYnB,MAIxB,wBACEoB,QAAS,WACPjB,EAAqB,SAAXD,EAAoB,cAAgB,SAFlD,sBCrBSmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.2dfa52cc.chunk.js","sourcesContent":["// import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { useState, useEffect, useRef } from \"react\";\n\nfunction App() {\n  const [src, setSrc] = useState(null);\n  const [prekol, setPrekol] = useState(\"user\");\n\n  useEffect(() => {\n    navigator.mediaDevices\n      .getUserMedia({\n        video: {\n          facingMode: prekol,\n        },\n      })\n      .then((stream) => {\n        setSrc(stream);\n      });\n  }, [prekol]);\n  return (\n    <div className=\"App\">\n      <video\n        width=\"200px\"\n        height=\"200px\"\n        autoPlay\n        muted\n        playsInline\n        ref={(video) => {\n          if (!!src) {\n            video.srcObject = src;\n          }\n        }}\n      />\n      <button\n        onClick={() => {\n          setPrekol(prekol === \"user\" ? \"environment\" : \"user\");\n        }}>\n        user\n      </button>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}